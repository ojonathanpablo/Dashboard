package com.nobre.caixa.componentes;

import com.nobre.caixa.evento.MenuEvento;
import com.nobre.caixa.swing.MenuBotao;
import com.nobre.caixa.swing.Separador;
import com.nobre.caixa.scroll.BarraDeRolagemPersonalizada;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import net.miginfocom.swing.MigLayout;
import org.jdesktop.animation.timing.Animator;
import org.jdesktop.animation.timing.TimingTarget;
import org.jdesktop.animation.timing.TimingTargetAdapter;

/**
 *
 * @author User
 */
public class Menu extends javax.swing.JPanel {

    private MenuBotao selecionarMenu;
    private MenuBotao emSelecionarMenu;
    private Animator animador;
    private MenuEvento evento;

    public Menu() {
        initComponents();

        setOpaque(false);
        scroll.setViewportBorder(null);
        scroll.setBorder(null);
        scroll.getViewport().setOpaque(false);
        scroll.setVerticalScrollBar(new BarraDeRolagemPersonalizada());
        painelMenu.setLayout(new MigLayout("wrap, fillx, inset 0", "[fill]"));
        TimingTarget alvo = new TimingTargetAdapter() {
            @Override
            public void timingEvent(float fraction) {
                selecionarMenu.setAnimacao(fraction);
                if (emSelecionarMenu != null) {
                    emSelecionarMenu.setAnimacao(1f - fraction);
                }
            }

        };
        animador = new Animator(500, alvo);
        animador.setAcceleration(.5f);
        animador.setDeceleration(.5f);
        animador.setResolution(0);
    }

    public void iniciarMenu(MenuEvento evento) {
        this.evento = evento;
        addMenu("1", "Dashboard", 0);
        addMenu("2", "Equipe", 1);
        addMenu("3", "Produto", 2);
        separador("Serviços");
        addMenu("4", "Rendimentos", 3);
        addMenu("5", "Despesas", 4);
        addMenu("6", "Relatórios", 5);
        addMenu("7", "Contabilidade", 6);
        addMenu("4", "Rendimentos", 3);

        espaco();
        addMenu("key", "Logout", 7);

    }

    private void addMenu(String icon, String text, int index) {
        MenuBotao menu = new MenuBotao(index);
        setFont(menu.getFont().deriveFont(Font.PLAIN, 14));
        menu.setIcon(new ImageIcon(getClass().getResource("/com/nobre/caixa/icon/" + icon + ".png")));
        menu.setText("   " + text);
        menu.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!animador.isRunning()) {
                    if (menu != selecionarMenu) {
                        emSelecionarMenu = selecionarMenu;
                        selecionarMenu = menu;
                        animador.start();
                        evento.menuSelecionado(index);
                    }
                }
            }
        });
        painelMenu.add(menu);

    }

    private void separador(String nome) {
        painelMenu.add(new Separador(nome), "h 30");
    }

    private void espaco() {
        painelMenu.add(new JLabel(), "push");
    }

    public void setSelecionar(int index) {
        for (Component com : painelMenu.getComponents()) {
            MenuBotao menu = (MenuBotao) com;
            if (menu.getIndex() == index) {
                if (menu != selecionarMenu) {
                    emSelecionarMenu = selecionarMenu;
                    selecionarMenu = menu;
                    animador.start();
                    evento.menuSelecionado(index);
                }
                break;
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        imageAvatar = new com.nobre.caixa.swing.ImageAvatar();
        scroll = new javax.swing.JScrollPane();
        painelMenu = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(210, 550));
        setPreferredSize(new java.awt.Dimension(206, 550));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(248, 248, 248));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nobre/caixa/icon/edit.png"))); // NOI18N
        jLabel1.setText("  Dashboard");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));

        imageAvatar.setToolTipText("");
        imageAvatar.setBorderSize(3);
        imageAvatar.setBorderSpace(2);
        imageAvatar.setGradientColor1(new java.awt.Color(63, 109, 217));
        imageAvatar.setGradientColor2(new java.awt.Color(199, 42, 42));
        imageAvatar.setImage(new javax.swing.ImageIcon(getClass().getResource("/com/nobre/caixa/icon/profile.jpg"))); // NOI18N
        imageAvatar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                imageAvatarAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        imageAvatar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageAvatarMouseClicked(evt);
            }
        });
        imageAvatar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                imageAvatarKeyPressed(evt);
            }
        });

        scroll.setToolTipText("");
        scroll.setMinimumSize(new java.awt.Dimension(240, 331));
        scroll.setPreferredSize(new java.awt.Dimension(240, 331));
        scroll.setViewportView(painelMenu);

        painelMenu.setOpaque(false);
        painelMenu.setPreferredSize(new java.awt.Dimension(217, 331));

        javax.swing.GroupLayout painelMenuLayout = new javax.swing.GroupLayout(painelMenu);
        painelMenu.setLayout(painelMenuLayout);
        painelMenuLayout.setHorizontalGroup(
            painelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        painelMenuLayout.setVerticalGroup(
            painelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 356, Short.MAX_VALUE)
        );

        scroll.setViewportView(painelMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addComponent(imageAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imageAvatarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imageAvatarKeyPressed

    }//GEN-LAST:event_imageAvatarKeyPressed

    private void imageAvatarAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_imageAvatarAncestorAdded

    }//GEN-LAST:event_imageAvatarAncestorAdded

    private void imageAvatarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageAvatarMouseClicked

        selectImage();
    }//GEN-LAST:event_imageAvatarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.nobre.caixa.swing.ImageAvatar imageAvatar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel painelMenu;
    private javax.swing.JScrollPane scroll;
    // End of variables declaration//GEN-END:variables

    private void selectImage() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                BufferedImage image = ImageIO.read(selectedFile);
                saveImage(image);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void saveImage(BufferedImage image) {
        try {
            File output = new File("C:/Projeto Pessoal/Farma/Dashboard-farmacia/src/com/nobre/caixa/icon"); // Se quiser salvar na pasta nobre.icon
            ImageIO.write(image, "jpg", output);
            imageAvatar.setImage(new javax.swing.ImageIcon(image));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

}
